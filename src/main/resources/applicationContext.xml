<?xml version="1.0" encoding="UTF-8"?>
<!--跟标签beans，里面配置一个又一个的bean子标签，每一个bean子标签都代表一个类的配置-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- id标识对象，class代表类的全路径-->
    <bean id="accountDao" class="com.test.transfer.dao.impl.JdbcAccountDaoImpl" scope="singleton"
        init-method="init" destroy-method="destroy">
        <property name="ConnectionUtils" ref="connectionUtils"/>
    </bean>
    <bean id="transferService" class="com.test.transfer.service.impl.TransferServiceImpl">
        <property name="AccountDao" ref="accountDao"></property>
    </bean>

    <!-- 方式一：无参构造函数 -->
    <!-- 链接管理对象 -->
    <bean id="connectionUtils" class="com.test.transfer.utils.ConnectionUtils"></bean>

    <!-- 方式二：静态方法 -->
<!--    <bean id="connectionUtilsStatic" class="com.test.transfer.utils.createConnectionFactory" factory-method="getInstanceStatic"/>-->

    <!-- 方式三：实例化方法 -->
    <bean id="createConnectionFactory" class="com.test.transfer.utils.createConnectionFactory"/>
    <bean id="connectionUtilsInstance" factory-bean="createConnectionFactory" factory-method="getInstance"/>

    <!-- 事务管理器 -->
    <bean id="transactionManager" class="com.test.transfer.utils.TransactionManager">
        <property name="ConnectionUtils" ref="connectionUtils"/>
    </bean>

    <!-- 代理工厂 -->
    <bean id="proxyFactory" class="com.test.transfer.factory.ProxyFactory">
        <property name="TransactionManager" ref="transactionManager"/>
    </bean>
</beans>